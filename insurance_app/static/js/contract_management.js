
        function switchTab(tabName) {
            // Hide all tab contents
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.style.display = 'none';
            });

            // Remove active class from all tab buttons
            document.querySelectorAll('.tab-button').forEach(btn => {
                btn.className = btn.className.replace('tab-active', 'tab-inactive');
            });

            // Show selected tab content
            document.getElementById(tabName + 'Tab').style.display = 'block';

            // Add active class to clicked tab button
            event.target.className = event.target.className.replace('tab-inactive', 'tab-active');
        }

        function editProfile() {
            // Enable form fields
            const form = document.querySelector('#profileTab form');
            const inputs = form.querySelectorAll('input, select, textarea');
            inputs.forEach(input => {
                input.removeAttribute('readonly');
                input.removeAttribute('disabled');
            });

            // Show edit buttons
            document.getElementById('editButtons').style.display = 'flex';

            // Change edit button text
            event.target.innerHTML = '<i class="fas fa-times mr-1"></i>H·ªßy ch·ªânh s·ª≠a';
            event.target.onclick = cancelEdit;
        }

        function cancelEdit() {
            // Disable form fields
            const form = document.querySelector('#profileTab form');
            const inputs = form.querySelectorAll('input, select, textarea');
            inputs.forEach(input => {
                input.setAttribute('readonly', '');
                if (input.tagName === 'SELECT') {
                    input.setAttribute('disabled', '');
                }
            });

            // Hide edit buttons
            document.getElementById('editButtons').style.display = 'none';

            // Reset edit button
            const editBtn = document.querySelector('#profileTab .text-blue-600');
            editBtn.innerHTML = '<i class="fas fa-edit mr-1"></i>Ch·ªânh s·ª≠a';
            editBtn.onclick = editProfile;
        }

        function saveProfile() {
            // Simulate saving
            const saveBtn = event.target;
            const originalText = saveBtn.innerHTML;
            saveBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>ƒêang l∆∞u...';
            saveBtn.disabled = true;

            setTimeout(() => {
                alert('‚úÖ C·∫≠p nh·∫≠t th√¥ng tin th√†nh c√¥ng!');
                cancelEdit();
                saveBtn.innerHTML = originalText;
                saveBtn.disabled = false;
            }, 1500);
        }

        function changeAvatar() {
            alert('üì∑ Ch·ª©c nƒÉng thay ƒë·ªïi ·∫£nh ƒë·∫°i di·ªán s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t s·ªõm!');
        }

        function changePassword() {
            const currentPassword = document.querySelector('#securityTab input[type="password"]:nth-of-type(1)').value;
            const newPassword = document.querySelector('#securityTab input[type="password"]:nth-of-type(2)').value;
            const confirmPassword = document.querySelector('#securityTab input[type="password"]:nth-of-type(3)').value;

            if (!currentPassword || !newPassword || !confirmPassword) {
                alert('‚ùå Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin!');
                return;
            }

            if (newPassword !== confirmPassword) {
                alert('‚ùå M·∫≠t kh·∫©u x√°c nh·∫≠n kh√¥ng kh·ªõp!');
                return;
            }

            if (newPassword.length < 8) {
                alert('‚ùå M·∫≠t kh·∫©u ph·∫£i c√≥ √≠t nh·∫•t 8 k√Ω t·ª±!');
                return;
            }

            // Simulate password change
            const btn = event.target;
            const originalText = btn.innerHTML;
            btn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>ƒêang c·∫≠p nh·∫≠t...';
            btn.disabled = true;

            setTimeout(() => {
                alert('‚úÖ ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng!');
                // Clear form
                document.querySelectorAll('#securityTab input[type="password"]').forEach(input => {
                    input.value = '';
                });
                btn.innerHTML = originalText;
                btn.disabled = false;
            }, 2000);
        }

        function toggleSwitch(element) {
            element.classList.toggle('active');
        }

// Password strength indicator
document.querySelector('#securityTab input[type="password"]:nth-of-type(2)').addEventListener('input', function(e) {
    const password = e.target.value;
    const progressBar = document.querySelector('.progress-bar');

    let strength = 0;
    if (password.length >= 8) strength += 25;
    if (/[A-Z]/.test(password)) strength += 25;
    if (/[0-9]/.test(password)) strength += 25;
    if (/[^A-Za-z0-9]/.test(password)) strength += 25;

    progressBar.style.width = strength + '%';

    if (strength < 50) {
        progressBar.style.background = 'linear-gradient(90deg, #ef4444, #dc2626)';
    } else if (strength < 75) {
        progressBar.style.background = 'linear-gradient(90deg, #f59e0b, #d97706)';
    } else {
        progressBar.style.background = 'linear-gradient(90deg, #10b981, #059669)';
    }
});

// Handle button clicks
document.addEventListener('click', function(e) {
    const button = e.target.closest('button');
    if (!button) return;

    const buttonText = button.textContent.trim();

    if (buttonText.includes('T·∫£i h·ª£p ƒë·ªìng')) {
        alert('üìÑ ƒêang t·∫£i xu·ªëng file PDF h·ª£p ƒë·ªìng...');
    } else if (buttonText.includes('In th·∫ª b·∫£o hi·ªÉm')) {
        alert('üñ®Ô∏è Y√™u c·∫ßu in th·∫ª b·∫£o hi·ªÉm ƒë√£ ƒë∆∞·ª£c g·ª≠i. Th·∫ª s·∫Ω ƒë∆∞·ª£c giao trong 3-5 ng√†y l√†m vi·ªác.');
    } else if (buttonText.includes('Gi·ªõi thi·ªáu b·∫°n b√®')) {
        alert('üéÅ M√£ gi·ªõi thi·ªáu c·ªßa b·∫°n: SECURE2024. Chia s·∫ª ƒë·ªÉ nh·∫≠n ∆∞u ƒë√£i!');
    } else if (buttonText.includes('X√≥a t√†i kho·∫£n')) {
        if (confirm('‚ö†Ô∏è B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a t√†i kho·∫£n? H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!')) {
            alert('üìß Ch√∫ng t√¥i ƒë√£ g·ª≠i email x√°c nh·∫≠n. Vui l√≤ng ki·ªÉm tra h·ªôp th∆∞ ƒë·ªÉ ho√†n t·∫•t.');
        }
    } else if (buttonText.includes('C√¢u h·ªèi th∆∞·ªùng g·∫∑p')) {
        alert('‚ùì Chuy·ªÉn ƒë·∫øn trang FAQ...');
    } else if (buttonText.includes('Chat v·ªõi t∆∞ v·∫•n vi√™n')) {
        alert('üí¨ M·ªü c·ª≠a s·ªï chat v·ªõi t∆∞ v·∫•n vi√™n...');
    } else if (buttonText.includes('G·ªçi hotline')) {
        alert('üìû ƒêang k·∫øt n·ªëi v·ªõi t·ªïng ƒë√†i 1900 1234...');
    } else if (buttonText.includes('ƒêƒÉng xu·∫•t t·∫•t c·∫£')) {
        if (confirm('üîê B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng xu·∫•t kh·ªèi t·∫•t c·∫£ thi·∫øt b·ªã kh√°c?')) {
            alert('‚úÖ ƒê√£ ƒëƒÉng xu·∫•t kh·ªèi t·∫•t c·∫£ thi·∫øt b·ªã kh√°c th√†nh c√¥ng!');
        }
    } else if (buttonText.includes('ƒêƒÉng xu·∫•t') && !buttonText.includes('t·∫•t c·∫£')) {
        alert('üì± ƒê√£ ƒëƒÉng xu·∫•t kh·ªèi thi·∫øt b·ªã Safari tr√™n iPhone!');
        button.closest('.flex').remove();
    } else if (buttonText.includes('L∆∞u c√†i ƒë·∫∑t')) {
        const btn = button;
        const originalText = btn.innerHTML;
        btn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>ƒêang l∆∞u...';
        btn.disabled = true;

        setTimeout(() => {
            alert('‚úÖ C√†i ƒë·∫∑t th√¥ng b√°o ƒë√£ ƒë∆∞·ª£c l∆∞u!');
            btn.innerHTML = originalText;
            btn.disabled = false;
        }, 1500);
    }
});

// Notification bell
document.querySelector('.fa-bell').closest('button').addEventListener('click', function() {
    alert('üîî B·∫°n c√≥ 3 th√¥ng b√°o m·ªõi:\n‚Ä¢ H·ª£p ƒë·ªìng #SH2024001 s·∫Øp ƒë·∫øn h·∫°n gia h·∫°n\n‚Ä¢ Y√™u c·∫ßu b·ªìi th∆∞·ªùng #BC2024003 ƒë√£ ƒë∆∞·ª£c ph√™ duy·ªát\n‚Ä¢ Khuy·∫øn m√£i ƒë·∫∑c bi·ªát d√†nh cho kh√°ch h√†ng VIP');
});
